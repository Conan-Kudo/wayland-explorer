{"type":"protocol","name":"viewporter","copyright":{"type":"copyright","text":"Copyright Â© 2013-2016 Collabora, Ltd.\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the \"Software\"),\n    to deal in the Software without restriction, including without limitation\n    the rights to use, copy, modify, merge, publish, distribute, sublicense,\n    and/or sell copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice (including the next\n    paragraph) shall be included in all copies or substantial portions of the\n    Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE."},"interfaces":[{"type":"interface","name":"wp_viewporter","version":"1","description":{"type":"description","text":"The global interface exposing surface cropping and scaling\n      capabilities is used to instantiate an interface extension for a\n      wl_surface object. This extended interface will then allow\n      cropping and scaling the surface contents, effectively\n      disconnecting the direct relationship between the buffer and the\n      surface size.","summary":"surface cropping and scaling"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"Informs the server that the client will not be using this\n\tprotocol object anymore. This does not affect any other objects,\n\twp_viewport objects included.","summary":"unbind from the cropping and scaling interface"},"args":[]},{"type":"request","name":"get_viewport","description":{"type":"description","text":"Instantiate an interface extension for the given wl_surface to\n\tcrop and scale its content. If the given wl_surface already has\n\ta wp_viewport object associated, the viewport_exists\n\tprotocol error is raised.","summary":"extend surface interface for crop and scale"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the new viewport interface id","interface":"wp_viewport"},{"type":"arg","name":"surface","argType":"object","summary":"the surface","interface":"wl_surface"}]}],"events":[],"enums":[{"type":"enum","name":"error","bitfield":false,"entries":[{"type":"entry","name":"viewport_exists","value":"0","summary":"the surface already has a viewport object associated"}]}]},{"type":"interface","name":"wp_viewport","version":"1","description":{"type":"description","text":"An additional interface to a wl_surface object, which allows the\n      client to specify the cropping and scaling of the surface\n      contents.\n\n      This interface works with two concepts: the source rectangle (src_x,\n      src_y, src_width, src_height), and the destination size (dst_width,\n      dst_height). The contents of the source rectangle are scaled to the\n      destination size, and content outside the source rectangle is ignored.\n      This state is double-buffered, see wl_surface.commit.\n\n      The two parts of crop and scale state are independent: the source\n      rectangle, and the destination size. Initially both are unset, that\n      is, no scaling is applied. The whole of the current wl_buffer is\n      used as the source, and the surface size is as defined in\n      wl_surface.attach.\n\n      If the destination size is set, it causes the surface size to become\n      dst_width, dst_height. The source (rectangle) is scaled to exactly\n      this size. This overrides whatever the attached wl_buffer size is,\n      unless the wl_buffer is NULL. If the wl_buffer is NULL, the surface\n      has no content and therefore no size. Otherwise, the size is always\n      at least 1x1 in surface local coordinates.\n\n      If the source rectangle is set, it defines what area of the wl_buffer is\n      taken as the source. If the source rectangle is set and the destination\n      size is not set, then src_width and src_height must be integers, and the\n      surface size becomes the source rectangle size. This results in cropping\n      without scaling. If src_width or src_height are not integers and\n      destination size is not set, the bad_size protocol error is raised when\n      the surface state is applied.\n\n      The coordinate transformations from buffer pixel coordinates up to\n      the surface-local coordinates happen in the following order:\n        1. buffer_transform (wl_surface.set_buffer_transform)\n        2. buffer_scale (wl_surface.set_buffer_scale)\n        3. crop and scale (wp_viewport.set*)\n      This means, that the source rectangle coordinates of crop and scale\n      are given in the coordinates after the buffer transform and scale,\n      i.e. in the coordinates that would be the surface-local coordinates\n      if the crop and scale was not applied.\n\n      If src_x or src_y are negative, the bad_value protocol error is raised.\n      Otherwise, if the source rectangle is partially or completely outside of\n      the non-NULL wl_buffer, then the out_of_buffer protocol error is raised\n      when the surface state is applied. A NULL wl_buffer does not raise the\n      out_of_buffer error.\n\n      If the wl_surface associated with the wp_viewport is destroyed,\n      all wp_viewport requests except 'destroy' raise the protocol error\n      no_surface.\n\n      If the wp_viewport object is destroyed, the crop and scale\n      state is removed from the wl_surface. The change will be applied\n      on the next wl_surface.commit.","summary":"crop and scale interface to a wl_surface"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"The associated wl_surface's crop and scale state is removed.\n\tThe change is applied on the next wl_surface.commit.","summary":"remove scaling and cropping from the surface"},"args":[]},{"type":"request","name":"set_source","description":{"type":"description","text":"Set the source rectangle of the associated wl_surface. See\n\twp_viewport for the description, and relation to the wl_buffer\n\tsize.\n\n\tIf all of x, y, width and height are -1.0, the source rectangle is\n\tunset instead. Any other set of values where width or height are zero\n\tor negative, or x or y are negative, raise the bad_value protocol\n\terror.\n\n\tThe crop and scale state is double-buffered, see wl_surface.commit.","summary":"set the source rectangle for cropping"},"args":[{"type":"arg","name":"x","argType":"fixed","summary":"source rectangle x"},{"type":"arg","name":"y","argType":"fixed","summary":"source rectangle y"},{"type":"arg","name":"width","argType":"fixed","summary":"source rectangle width"},{"type":"arg","name":"height","argType":"fixed","summary":"source rectangle height"}]},{"type":"request","name":"set_destination","description":{"type":"description","text":"Set the destination size of the associated wl_surface. See\n\twp_viewport for the description, and relation to the wl_buffer\n\tsize.\n\n\tIf width is -1 and height is -1, the destination size is unset\n\tinstead. Any other pair of values for width and height that\n\tcontains zero or negative values raises the bad_value protocol\n\terror.\n\n\tThe crop and scale state is double-buffered, see wl_surface.commit.","summary":"set the surface size for scaling"},"args":[{"type":"arg","name":"width","argType":"int","summary":"surface width"},{"type":"arg","name":"height","argType":"int","summary":"surface height"}]}],"events":[],"enums":[{"type":"enum","name":"error","bitfield":false,"entries":[{"type":"entry","name":"bad_value","value":"0","summary":"negative or zero values in width or height"},{"type":"entry","name":"bad_size","value":"1","summary":"destination size is not integer"},{"type":"entry","name":"out_of_buffer","value":"2","summary":"source rectangle extends outside of the content area"},{"type":"entry","name":"no_surface","value":"3","summary":"the wl_surface was destroyed"}]}]}]}