{"type":"protocol","name":"dialog_v1","copyright":{"type":"copyright","text":"Copyright Â© 2023 Carlos Garnacho\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the \"Software\"),\n    to deal in the Software without restriction, including without limitation\n    the rights to use, copy, modify, merge, publish, distribute, sublicense,\n    and/or sell copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice (including the next\n    paragraph) shall be included in all copies or substantial portions of the\n    Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE."},"interfaces":[{"type":"interface","name":"xdg_wm_dialog_v1","version":"1","description":{"type":"description","text":"The xdg_wm_dialog_v1 interface is exposed as a global object allowing\n      to register surfaces with a xdg_toplevel role as \"dialogs\" relative to\n      another toplevel.\n\n      The compositor may let this relation influence how the surface is\n      placed, displayed or interacted with.\n\n      Warning! The protocol described in this file is currently in the testing\n      phase. Backward compatible changes may be added together with the\n      corresponding interface version bump. Backward incompatible changes can\n      only be done by creating a new major version of the extension.","summary":"create dialogs related to other toplevels"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"Destroys the xdg_wm_dialog_v1 object. This does not affect\n        the xdg_dialog_v1 objects generated through it.","summary":"destroy the dialog manager object"},"args":[]},{"type":"request","name":"get_xdg_dialog","description":{"type":"description","text":"Creates a xdg_dialog_v1 object for the given toplevel. See the interface\n        description for more details.\n\n\tCompositors must raise an already_used error if clients attempt to\n\tcreate multiple xdg_dialog_v1 objects for the same xdg_toplevel.","summary":"create a dialog object"},"args":[{"type":"arg","name":"id","argType":"new_id","interface":"xdg_dialog_v1"},{"type":"arg","name":"toplevel","argType":"object","interface":"xdg_toplevel"}]}],"events":[],"enums":[{"type":"enum","name":"error","bitfield":false,"entries":[{"type":"entry","name":"already_used","value":"0","summary":"the xdg_toplevel object has already been used to create a xdg_dialog_v1"}]}]},{"type":"interface","name":"xdg_dialog_v1","version":"1","description":{"type":"description","text":"A xdg_dialog_v1 object is an ancillary object tied to a xdg_toplevel. Its\n      purpose is hinting the compositor that the toplevel is a \"dialog\" (e.g. a\n      temporary window) relative to another toplevel (see\n      xdg_toplevel.set_parent). If the xdg_toplevel is destroyed, the xdg_dialog_v1\n      becomes inert.\n\n      Through this object, the client may provide additional hints about\n      the purpose of the secondary toplevel. This interface has no effect\n      on toplevels that are not attached to a parent toplevel.","summary":"dialog object"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"Destroys the xdg_dialog_v1 object. If this object is destroyed\n        before the related xdg_toplevel, the compositor should unapply its\n        effects.","summary":"destroy the dialog object"},"args":[]},{"type":"request","name":"set_modal","description":{"type":"description","text":"Hints that the dialog has \"modal\" behavior. Modal dialogs typically\n        require to be fully addressed by the user (i.e. closed) before resuming\n        interaction with the parent toplevel, and may require a distinct\n        presentation.\n\n        Clients must implement the logic to filter events in the parent\n        toplevel on their own.\n\n        Compositors may choose any policy in event delivery to the parent\n        toplevel, from delivering all events unfiltered to using them for\n        internal consumption.","summary":"mark dialog as modal"},"args":[]},{"type":"request","name":"unset_modal","description":{"type":"description","text":"Drops the hint that this dialog has \"modal\" behavior. See\n        xdg_dialog_v1.set_modal for more details.","summary":"mark dialog as not modal"},"args":[]}],"events":[],"enums":[]}]}