{"type":"protocol","name":"aura_shell","copyright":{"type":"copyright","text":"Copyright 2017 The Chromium Authors\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the \"Software\"),\n    to deal in the Software without restriction, including without limitation\n    the rights to use, copy, modify, merge, publish, distribute, sublicense,\n    and/or sell copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice (including the next\n    paragraph) shall be included in all copies or substantial portions of the\n    Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE."},"interfaces":[{"type":"interface","name":"zaura_shell","version":"53","description":{"type":"description","text":"The global interface exposing aura shell capabilities is used to\n      instantiate an interface extension for a wl_surface object.\n      This extended interface will then allow the client to use aura shell\n      specific functionality.","summary":"aura_shell"},"requests":[{"type":"request","name":"get_aura_surface","description":{"type":"description","text":"Instantiate an interface extension for the given wl_surface to\n\tprovide aura shell functionality. If the given wl_surface is not\n\tassociated with a shell surface, the shell_surface_missing protocol\n\terror is raised.","summary":"extend surface interface for aura shell"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the new aura surface interface id","interface":"zaura_surface"},{"type":"arg","name":"surface","argType":"object","summary":"the surface","interface":"wl_surface"}]},{"type":"request","name":"get_aura_output","since":"2","description":{"type":"description","text":"Instantiate an interface extension for the given wl_output to\n\tprovide aura shell functionality.","summary":"extend output interface for aura shell"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the new aura output interface id","interface":"zaura_output"},{"type":"arg","name":"output","argType":"object","summary":"the output","interface":"wl_output"}]},{"type":"request","name":"surface_submission_in_pixel_coordinates","since":"26","description":{"type":"description","text":"[Deprecated] Informs the server that when submitting surfaces, this\n        client will not use wl_surface_set_buffer_scale to report the scales,\n        nor will it apply scale via vp_viewporter. Instead the server should\n        apply an appropriate scale transform to have the submitted buffers\n        composited correctly.","summary":"surfaces will be submitted in pixel coordinates"},"args":[]},{"type":"request","name":"get_aura_toplevel_for_xdg_toplevel","since":"27","description":{"type":"description","text":"Retrieve the aura toplevel interface for a given xdg toplevel interface","summary":"get aura toplevel"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the new aura toplevel interface id","interface":"zaura_toplevel"},{"type":"arg","name":"toplevel","argType":"object","interface":"xdg_toplevel"}]},{"type":"request","name":"get_aura_popup_for_xdg_popup","since":"28","description":{"type":"description","text":"Retrieve the aura popup interface for the given xdg popup interface","summary":"get aura popup"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the aura popup interface id","interface":"zaura_popup"},{"type":"arg","name":"popup","argType":"object","interface":"xdg_popup"}]},{"type":"request","name":"release","requestType":"destructor","since":"38","description":{"type":"description","text":"Using this request a client can tell the server that it is not going to\n\tuse the zaura_shell object anymore. This does not affect any other objects.\n\n  This is named \"release\" because \"destroy\" is a special named function used for\n  freeing wl_proxy objects. Naming it \"destroy\" will cause marshalling errors\n  when running on lower versioned hosts. All \"release\" requests here should be\n  renamed to \"destroy\" if we move to aura-shell v2.","summary":"release zaura_shell object"},"args":[]}],"events":[{"type":"event","name":"layout_mode","since":"11","description":{"type":"description","text":"Sends the layout_mode used by the server.","summary":"sends the layout_mode"},"args":[{"type":"arg","name":"layout_mode","argType":"uint","summary":"layout_mode enum"}]},{"type":"event","name":"bug_fix","since":"14","description":{"type":"description","text":"Sends a monorail ID of a bug fixed on the exo server that clients can\n        use to gate functionality.","summary":"sends a bug fix ID"},"args":[{"type":"arg","name":"id","argType":"uint","summary":"ID of a single bug fix"}]},{"type":"event","name":"desks_changed","since":"22","description":{"type":"description","text":"Notifies when there is a change in global desks state. This is emitted on\n        desk name changes, desk addition/removal or desks are reordered.\n        \"desk_names\" argument contains the set of null terminated strings as names of desks.","summary":"sends names of desks"},"args":[{"type":"arg","name":"desk_names","argType":"array","summary":"an array of existing desks' names"}]},{"type":"event","name":"desk_activation_changed","since":"22","description":{"type":"description","text":"Notifies when there is a change of the active desk.","summary":"sends the index of the active desk"},"args":[{"type":"arg","name":"active_desk_index","argType":"int","summary":"index of the active desk"}]},{"type":"event","name":"activated","since":"24","description":{"type":"description","text":"Notifies client that the activated surface changed.","summary":"activated surface changed"},"args":[{"type":"arg","name":"gained_active","argType":"object","interface":"wl_surface","allowNull":"true"},{"type":"arg","name":"lost_active","argType":"object","interface":"wl_surface","allowNull":"true"}]}],"enums":[{"type":"enum","name":"error","bitfield":false,"entries":[{"type":"entry","name":"aura_surface_exists","value":"0","summary":"the surface already has an aura surface object associated"},{"type":"entry","name":"aura_output_exists","value":"1","summary":"the output already has an aura output object associated"}]},{"type":"enum","name":"layout_mode","bitfield":false,"description":{"type":"description","text":"Specifies the server's window layout mode.","summary":"the layout mode"},"entries":[{"type":"entry","name":"windowed","value":"1","summary":"multiple windows"},{"type":"entry","name":"tablet","value":"2","summary":"restricted mode for tablet"}]}]},{"type":"interface","name":"zaura_surface","version":"51","description":{"type":"description","text":"An additional interface to a wl_surface object, which allows the\n      client to access aura shell specific functionality for surface.","summary":"aura shell interface to a wl_surface"},"requests":[{"type":"request","name":"set_frame","description":{"type":"description","text":"[Deprecated] Suggests a surface should use a specific frame. Deprecated\n        since M105. See the set_decoration method on zaura_toplevel and\n        zaura_popup.","summary":"request a frame for surface"},"args":[{"type":"arg","name":"type","argType":"uint","summary":"the new frame type"}]},{"type":"request","name":"set_parent","since":"2","description":{"type":"description","text":"Set the \"parent\" of this surface. \"x\" and \"y\" arguments specify the\n\tinitial position for surface relative to parent.","summary":"set the parent of this surface"},"args":[{"type":"arg","name":"parent","argType":"object","interface":"zaura_surface","allowNull":"true"},{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"}]},{"type":"request","name":"set_frame_colors","since":"3","description":{"type":"description","text":"Set the frame colors.","summary":"set the frame colors of this surface"},"args":[{"type":"arg","name":"active_color","argType":"uint","summary":"32 bit ARGB color value, not premultiplied"},{"type":"arg","name":"inactive_color","argType":"uint","summary":"32 bit ARGB color value, not premultiplied"}]},{"type":"request","name":"set_startup_id","since":"4","description":{"type":"description","text":"Set the startup ID.","summary":"set the startup ID of this surface"},"args":[{"type":"arg","name":"startup_id","argType":"string","allowNull":"true"}]},{"type":"request","name":"set_application_id","since":"5","description":{"type":"description","text":"Set the application ID.","summary":"set the application ID of this surface"},"args":[{"type":"arg","name":"application_id","argType":"string","allowNull":"true"}]},{"type":"request","name":"set_client_surface_id","since":"7","description":{"type":"description","text":"Deprecated. Please use set_client_surface_str_id instead.\n\tSet the identifier of the surface assigned by the client.","summary":"set the client surface ID of this surface"},"args":[{"type":"arg","name":"client_surface_id","argType":"int"}]},{"type":"request","name":"set_occlusion_tracking","since":"8","description":{"type":"description","text":"Sets occlusion tracking on this surface. The client will be updated with a\n\tnew occlusion fraction when the amount of occlusion of this surface changes.","summary":"set tracked occlusion region"},"args":[]},{"type":"request","name":"unset_occlusion_tracking","since":"8","description":{"type":"description","text":"Unsets occlusion tracking for this surface.","summary":"unset tracked occlusion region"},"args":[]},{"type":"request","name":"activate","since":"9","description":{"type":"description","text":"[Deprecated] Make this the active window. This usually implies something\n        like restacking this surface to the foreground. The compositor is free\n        to ignore this request if it deems the client to be misbehaving.\n        Typically this request will only be honoured in response to some user\n        driven event, such as executing an application or opening a file in a\n        window that already exists.","summary":"Indicate that this window wants to be the active window"},"args":[]},{"type":"request","name":"draw_attention","since":"9","description":{"type":"description","text":"Draw attention to this surface in a way that does not change the user's\n\tfocus. This usually means animating window decorations or taskbar icons.\n\tThe compositor can still ignore this request if it deems fit, but unlike\n\tdraw_focus, these requests are expected to come from background tasks,\n\tand are more likely to be honoured.","summary":"Indicate that this window wants some of the user's attention"},"args":[]},{"type":"request","name":"set_fullscreen_mode","since":"10","description":{"type":"description","text":"[Deprecated] Use the set_fullscreen_mode in the toplevel interface.\n        Suggests how the windowing system should behave if this surface were\n        to go fullscreen. Does not make the surface fullscreen.\n\n        Typically the default mode is \"immersive\".","summary":"Sets the behavior of the surface in fullscreen."},"args":[{"type":"arg","name":"mode","argType":"uint","enum":"fullscreen_mode"}]},{"type":"request","name":"set_client_surface_str_id","since":"12","description":{"type":"description","text":"Set the identifier of the surface assigned by the client.","summary":"set the client surface ID of this surface"},"args":[{"type":"arg","name":"client_surface_id","argType":"string"}]},{"type":"request","name":"set_server_start_resize","since":"15","description":{"type":"description","text":"Suggests a surface to have client-side decoration, but\n\tserver-side decides when and where to start the resize. The server may also\n\tapply visual effects to indicate that the resize operation is ongoing.","summary":"request a server-side shadow for surface"},"args":[]},{"type":"request","name":"intent_to_snap","since":"16","description":{"type":"description","text":"[Deprecated] Use intent_to_snap on zaura_toplevel.\n        Notify (or inform) the server the client's intent to snap the window.\n        To inform it's no longer willing to snap, send 'none'.","summary":"client intents to snap the surface."},"args":[{"type":"arg","name":"direction","argType":"uint","enum":"snap_direction"}]},{"type":"request","name":"set_snap_left","since":"16","description":{"type":"description","text":"[Deprecated] Use set_snap_primary on zaura_toplevel.\n        Request that surface is snapped to the left.","summary":"snap the surface to the left."},"args":[]},{"type":"request","name":"set_snap_right","since":"16","description":{"type":"description","text":"[Deprecated] Use set_snap_secondary on zaura_toplevel.\n        Request that surface is snapped to the right.","summary":"snap the surface to the right."},"args":[]},{"type":"request","name":"unset_snap","since":"16","description":{"type":"description","text":"[Deprecated] Use unset_snap on zaura_toplevel.\n        Request that surface resets snapping.","summary":"Unset the surface snap."},"args":[]},{"type":"request","name":"set_window_session_id","since":"18","description":{"type":"description","text":"Set window session id to the surface.","summary":"set surface window session id"},"args":[{"type":"arg","name":"id","argType":"int","summary":"window session id"}]},{"type":"request","name":"set_can_go_back","since":"19","description":{"type":"description","text":"Sets that the surface can go back as per its navigation list.\n        This allows the server to react to by minimizing the window upon a\n        system wide back gesture.","summary":"Set the minimize-on-back-gesture behavior."},"args":[]},{"type":"request","name":"unset_can_go_back","since":"19","description":{"type":"description","text":"Unsets that the surface can go back as per its navigation list.\n        See above.","summary":"Unset the minimize-on-back-gesture behavior."},"args":[]},{"type":"request","name":"set_pip","since":"20","description":{"type":"description","text":"Requests that the surface is set to Picture-in-Picture (PIP).","summary":"Set pip for the surface."},"args":[]},{"type":"request","name":"unset_pip","since":"20","description":{"type":"description","text":"Requests that the surface is unset from Picture-in-Picture (PIP).","summary":"Unset pip for the surface."},"args":[]},{"type":"request","name":"set_aspect_ratio","since":"20","description":{"type":"description","text":"Sets the aspect ratio of the surface.","summary":"Set aspect ratio for the surface."},"args":[{"type":"arg","name":"width","argType":"int"},{"type":"arg","name":"height","argType":"int"}]},{"type":"request","name":"move_to_desk","since":"22","description":{"type":"description","text":"If |index| equals -1, requests that the server toggles whether client\n        is visible on all workspaces.\n        If |index| is not -1, requests that the server moves the client to the desk at\n        |index|.","summary":"move to desk"},"args":[{"type":"arg","name":"index","argType":"int"}]},{"type":"request","name":"set_initial_workspace","since":"23","description":{"type":"description","text":"If |initial_workspace| equals '-1', a window is restored and visible on all workspaces,\n        Otherwise, set the initial workspace to restore the window to the corresponding workspace.\n        This is not double buffered and must be set before attaching a buffer.","summary":"initial workspace for restore"},"args":[{"type":"arg","name":"initial_workspace","argType":"string","summary":"intial workspace for restoring or '-1' for visible on all workspaces"}]},{"type":"request","name":"set_pin","since":"25","description":{"type":"description","text":"Requests that a window is pinned which means that the system does not allow\n  the user to leave the window until an exit criteria is met.\n\n\tThis is a request to get the window pinned so that the user cannot get to any\n\tother window / application. There are two modes:\n  A. trusted is 0 - which is slightly less restrictive and allows the user to\n  get out of the window by a predefined way of authentication.\n  B. trusted is not 0 in which case a trusted application was locking down the\n  system and needs to unlock. This is used for e.g. School tests.","summary":"pin a window (trusted or not)"},"args":[{"type":"arg","name":"trusted","argType":"int","summary":"0 for non trusted"}]},{"type":"request","name":"unset_pin","since":"25","description":{"type":"description","text":"Requests that the user can leave a previously pinned window.\n\n\tThis is a request to unpin a previously pinned window. It does not matter if\n  the window was locked with the trusted state or not.","summary":"unpin a window"},"args":[]},{"type":"request","name":"release","requestType":"destructor","since":"38","description":{"type":"description","text":"Destroy the zaura_surface object. A client should destroy this object when the\n  role is unmapped from a wl_surface.\n\n  See zaura_shell.release for destructor naming.","summary":"destroy zaura_surface"},"args":[]},{"type":"request","name":"show_tooltip","since":"47","description":{"type":"description","text":"Show tooltip on server side.\n        `x` and `y` specifies the location of tooltip in surface local coordinates.\n        `hide_delay` and `show_delay` specify the time to wait until showing/hiding tooltip.\n        The unit is millisecond.","summary":"show tooltip window"},"args":[{"type":"arg","name":"text","argType":"string"},{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"},{"type":"arg","name":"tooltip_trigger","argType":"uint","summary":"tooltip_trigger enum"},{"type":"arg","name":"show_delay","argType":"uint","summary":"delay to show tooltip in millisecond"},{"type":"arg","name":"hide_delay","argType":"uint","summary":"delay to hide tooltip in millisecond"}]},{"type":"request","name":"hide_tooltip","since":"47","description":{"type":"description","text":"Hide tooltip created by the same client on server side.\n        This may be called even when there is no tooltip window to hide.","summary":"hide tooltip window"},"args":[]},{"type":"request","name":"set_accessibility_id","since":"51","description":{"type":"description","text":"Set accessibility window ID to the surface. A negative number removes\n        the existing accessibility ID from the surface.","summary":"set accessibility ID to the surface"},"args":[{"type":"arg","name":"id","argType":"int","summary":"Accessibility ID. Negative number removes existing accessibility ID from the surface."}]}],"events":[{"type":"event","name":"occlusion_changed","since":"8","description":{"type":"description","text":"Notifies when there is a change in the amount this surface is occluded.\n\tThe occlusion update is sent as a fixed point number from 0 to 1, representing\n\tthe proportion of occlusion.","summary":"Notifies on an occlusion change"},"args":[{"type":"arg","name":"occlusion_fraction","argType":"fixed"},{"type":"arg","name":"occlusion_reason","argType":"uint"}]},{"type":"event","name":"lock_frame_normal","since":"17","description":{"type":"description","text":"Notifies the client to lock window in normal or restore state. When\n        window is locked, the window frame should look like it is in restored\n        state, but actually isn't. Locking happends while dragging a maximized\n        window.","summary":"Notify the client that server intent to lock window in normal or restore state"},"args":[]},{"type":"event","name":"unlock_frame_normal","since":"17","description":{"type":"description","text":"Notifies the client to unlock window if it is previously locked.\n        Unlocking happends while dragging a maximized window.","summary":"Notify the client that server intent to unlock window's normal or restore state"},"args":[]},{"type":"event","name":"occlusion_state_changed","since":"21","description":{"type":"description","text":"Notifies the client that the occlusion state of a window has changed. Clients\n\twill only receive these messages if they previously request occlusion tracking\n  via set_occlusion_tracking for a particular surface.","summary":"Notify the client that the occlusion state changed"},"args":[{"type":"arg","name":"mode","argType":"uint","enum":"occlusion_state"}]},{"type":"event","name":"desk_changed","since":"22","description":{"type":"description","text":"Notifies when there is a change in the desk state of a window.\n        This is emitted when a window is moved to another desk or\n        when its assigned-to-all-desks state changes.","summary":"window desk state changed"},"args":[{"type":"arg","name":"state","argType":"int","summary":"index of desk or -1 for a window assigned to all desks"}]},{"type":"event","name":"start_throttle","since":"29","description":{"type":"description","text":"Informs the client to start throttling on the surface.","summary":"start throttling on the surface"},"args":[]},{"type":"event","name":"end_throttle","since":"29","description":{"type":"description","text":"Informs the client to end throttling on the surface.","summary":"end throttling on the surface"},"args":[]},{"type":"event","name":"tooltip_shown","since":"47","description":{"type":"description","text":"Informs the client that the tooltip is shown with states.\n        `x` and `y` specifies the location of tooltip in surface local coordinates.","summary":"tooltip is shown by server side"},"args":[{"type":"arg","name":"text","argType":"string"},{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"},{"type":"arg","name":"width","argType":"int"},{"type":"arg","name":"height","argType":"int"}]},{"type":"event","name":"tooltip_hidden","since":"47","description":{"type":"description","text":"Informs the client that the tooltip is hidden.","summary":"tooltip is hidden by server side"},"args":[]}],"enums":[{"type":"enum","name":"frame_type","bitfield":false,"description":{"type":"description","text":"Frame types that can be used to decorate a surface.","summary":"different frame types"},"entries":[{"type":"entry","name":"none","value":"0","summary":"no frame"},{"type":"entry","name":"normal","value":"1","summary":"caption with shadow"},{"type":"entry","name":"shadow","value":"2","summary":"shadow only"}]},{"type":"enum","name":"occlusion_change_reason","bitfield":false,"description":{"type":"description","text":"Enum describing why an occlusion change happened. An occlusion change as a\n\tresult of a user action could include things like the user moving a window,\n\tchanging occlusion, or opening/closing a window, changing the occlusion.","summary":"occlusion change reason"},"entries":[{"type":"entry","name":"user_action","value":"1","summary":"occlusion changed as a result of a user action"}]},{"type":"enum","name":"fullscreen_mode","bitfield":false,"description":{"type":"description","text":"[Deprecated] Possible windowing system behaviors if this surface were to go\n          fullscreen.","summary":"Specifies the behavior of the surface in fullscreen."},"entries":[{"type":"entry","name":"immersive","value":"0","summary":"user can access system UIs such as the shelf and window frame\n          by pointing to, or swiping over, the screen edge"},{"type":"entry","name":"plain","value":"1","summary":"user cannot access system UIs using mouse/touches"}]},{"type":"enum","name":"snap_direction","bitfield":false,"description":{"type":"description","text":"Surface snap directions.","summary":"surface snap directions"},"entries":[{"type":"entry","name":"none","value":"0","summary":""},{"type":"entry","name":"left","value":"1","summary":""},{"type":"entry","name":"right","value":"2","summary":""}]},{"type":"enum","name":"occlusion_state","bitfield":false,"description":{"type":"description","text":"Describes the occlusion state of a surface.","summary":"surface occlusion state"},"entries":[{"type":"entry","name":"unknown","value":"0","summary":"The surface's occlusion state isn't tracked"},{"type":"entry","name":"visible","value":"1","summary":"The surface is visible"},{"type":"entry","name":"occluded","value":"2","summary":"The surface is occluded"},{"type":"entry","name":"hidden","value":"3","summary":"The surface is not visible"}]},{"type":"enum","name":"tooltip_trigger","bitfield":false,"description":{"type":"description","text":"Describes what triggered tooltip","summary":"type of tooltip trigger"},"entries":[{"type":"entry","name":"cursor","value":"0","summary":"triggered by cursor"},{"type":"entry","name":"keyboard","value":"1","summary":"triggered by keyboard"}]}]},{"type":"interface","name":"zaura_output","version":"45","description":{"type":"description","text":"An additional interface to a wl_output object, which allows the\n      client to access aura shell specific functionality for output.","summary":"aura shell interface to a wl_output"},"requests":[{"type":"request","name":"release","requestType":"destructor","since":"38","description":{"type":"description","text":"Destroy this zaura_shell object.\n\n\tDestroying a bound zaura_shell object while there are zaura_surfaces\n\tstill alive created by this zaura_shell object instance is illegal\n\tand will result in a protocol error.\n\n  See zaura_shell.release for destructor naming.","summary":"destroy zaura_output"},"args":[]}],"events":[{"type":"event","name":"scale","since":"2","description":{"type":"description","text":"The scale event describes an available scale for the output.\n\n\tThe event is sent when binding to the output object and there\n\twill always be one scale, the current scale. The event is sent\n\tagain if an output changes scale, for the scale that is now\n\tcurrent. In other words, the current scale is always the last\n\tscale that was received with the current flag set.","summary":"advertise available scales for the output"},"args":[{"type":"arg","name":"flags","argType":"uint","summary":"bitfield of scale flags","enum":"scale_property"},{"type":"arg","name":"scale","argType":"uint","summary":"output scale","enum":"scale_factor"}]},{"type":"event","name":"connection","since":"5","description":{"type":"description","text":"The connection event describes how the output is connected.\n\n\tThe event is sent when binding to the output object.","summary":"advertise connection for the output"},"args":[{"type":"arg","name":"connection","argType":"uint","summary":"output connection","enum":"connection_type"}]},{"type":"event","name":"device_scale_factor","since":"5","description":{"type":"description","text":"This event describes the device specific scale factor for the output.\n\n\tThe device specific scale factor is not expected the change during\n\tthe lifetime of the output. And it is not limited to an integer value\n\tlike the scale factor provided by wl_output interface. The exact\n\tcontents scale used by the compositor can be determined by combining\n\tthis device scale factor with the current output scale.\n\n\tThe event is sent when binding to the output object.","summary":"advertise device scale factor for the output"},"args":[{"type":"arg","name":"scale","argType":"uint","summary":"output device scale factor","enum":"scale_factor"}]},{"type":"event","name":"insets","since":"33","description":{"type":"description","text":"This event describes the insets for the output in logical screen\n        coordinates, from which the work area can be calculated.\n\n        This event is sent before wl_output.done, after which the client would\n        apply the change.","summary":"advertise the work area insets for the output"},"args":[{"type":"arg","name":"top","argType":"int"},{"type":"arg","name":"left","argType":"int"},{"type":"arg","name":"bottom","argType":"int"},{"type":"arg","name":"right","argType":"int"}]},{"type":"event","name":"logical_transform","since":"34","description":{"type":"description","text":"This event describes the logical transform for the output. Whereas\n        wl_output.geometry's transform corresponds to the display's panel\n        rotation, the logical transform corresponds to the display's logical\n        rotation.\n\n        This event is sent before wl_output.done, after which the client would\n        apply the change.","summary":"advertise the output's logical transform"},"args":[{"type":"arg","name":"transform","argType":"int","enum":"wl_output.transform"}]},{"type":"event","name":"display_id","since":"43","description":{"type":"description","text":"This event describes the 64bit display id assigned to each display by ChromeOS.\n\tThe value is opaque and should not be interpreted.","summary":"advertise the output's display id"},"args":[{"type":"arg","name":"display_id_hi","argType":"uint"},{"type":"arg","name":"display_id_lo","argType":"uint"}]},{"type":"event","name":"activated","since":"45","description":{"type":"description","text":"Notifies that this output is now active output. It is typically used as a\n        target when a new window is created without specific bounds.","summary":"target display for new windows"},"args":[]}],"enums":[{"type":"enum","name":"scale_property","bitfield":true,"description":{"type":"description","text":"These flags describe properties of an output scale.\n\tThey are used in the flags bitfield of the scale event.","summary":"scale information"},"entries":[{"type":"entry","name":"current","value":"0x1","summary":"indicates this is the current scale"},{"type":"entry","name":"preferred","value":"0x2","summary":"indicates this is the preferred scale"}]},{"type":"enum","name":"scale_factor","bitfield":false,"entries":[{"type":"entry","name":"0400","value":"400"},{"type":"entry","name":"0500","value":"500"},{"type":"entry","name":"0550","value":"550"},{"type":"entry","name":"0600","value":"600"},{"type":"entry","name":"0625","value":"625"},{"type":"entry","name":"0650","value":"650"},{"type":"entry","name":"0700","value":"700"},{"type":"entry","name":"0750","value":"750"},{"type":"entry","name":"0800","value":"800"},{"type":"entry","name":"0850","value":"850"},{"type":"entry","name":"0900","value":"900"},{"type":"entry","name":"0950","value":"950"},{"type":"entry","name":"1000","value":"1000"},{"type":"entry","name":"1050","value":"1050"},{"type":"entry","name":"1100","value":"1100"},{"type":"entry","name":"1150","value":"1150"},{"type":"entry","name":"1125","value":"1125"},{"type":"entry","name":"1200","value":"1200"},{"type":"entry","name":"1250","value":"1250"},{"type":"entry","name":"1300","value":"1300"},{"type":"entry","name":"1400","value":"1400"},{"type":"entry","name":"1450","value":"1450"},{"type":"entry","name":"1500","value":"1500"},{"type":"entry","name":"1600","value":"1600"},{"type":"entry","name":"1750","value":"1750"},{"type":"entry","name":"1800","value":"1800"},{"type":"entry","name":"2000","value":"2000"},{"type":"entry","name":"2200","value":"2200"},{"type":"entry","name":"2250","value":"2250"},{"type":"entry","name":"2500","value":"2500"},{"type":"entry","name":"2750","value":"2750"},{"type":"entry","name":"3000","value":"3000"},{"type":"entry","name":"3500","value":"3500"},{"type":"entry","name":"4000","value":"4000"},{"type":"entry","name":"4500","value":"4500"},{"type":"entry","name":"5000","value":"5000"}]},{"type":"enum","name":"connection_type","bitfield":false,"entries":[{"type":"entry","name":"unknown","value":"0"},{"type":"entry","name":"internal","value":"1"}]}]},{"type":"interface","name":"zaura_toplevel","version":"53","description":{"type":"description","text":"An interface to the toplevel shell, which allows the\n      client to access shell specific functionality.","summary":"aura shell interface to the toplevel shell"},"requests":[{"type":"request","name":"set_orientation_lock","since":"26","description":{"type":"description","text":"Request a specific orientation behavior when this surface is in fullscreen.","summary":"set orientation lock for a remote surface"},"args":[{"type":"arg","name":"orientation_lock","argType":"uint","enum":"orientation_lock"}]},{"type":"request","name":"surface_submission_in_pixel_coordinates","since":"28","description":{"type":"description","text":"Informs the server that when submitting this surface, this client will not\n        use wl_surface_set_buffer_scale to report the scales, nor will it apply\n        scale via vp_viewporter. Instead the server should apply an appropriate\n        scale transform for the submitted buffers to be composited correctly.","summary":"surface will be submitted in pixel coordinates"},"args":[]},{"type":"request","name":"set_supports_screen_coordinates","since":"29","description":{"type":"description","text":"Requesting this will enable screen coordinates in surfaces\n\tassociated with aura_toplevel including sub surfaces and popup\n\twindows who added this toplevel as a parent. This should be\n\tset before first commit.","summary":"enables screen coordinates in window bounds"},"args":[]},{"type":"request","name":"set_window_bounds","since":"29","description":{"type":"description","text":"Request a new location and bounds of the surface in DP screen\n\tcoordinates.  The size will be applied to visible bounds used\n\tin set_geometry.  The output is a hint for the compositor to\n\tdetermine which output the window should move to. If the\n\toutput is null, the compositor should make decision solely by\n\tthe given bounds. These parameters are just a request and the\n\tcompositor may ignore, adjust the size and position based on\n\tthe rule imposed by the window manager, or may preserve it for\n\tfuture operations. For example, the compositor will not allow\n\ta position outside of the output, or the compositor may just\n\tstore it if the toplevel surface is in maximiezd state, and\n\tmay use it upon unmaximized.","summary":"set window size and position"},"args":[{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"},{"type":"arg","name":"width","argType":"int"},{"type":"arg","name":"height","argType":"int"},{"type":"arg","name":"output","argType":"object","summary":"the output","interface":"wl_output","allowNull":"true"}]},{"type":"request","name":"set_restore_info","since":"30","description":{"type":"description","text":"Request session id and restore id of a newly created browser window.\n      Set the information used by compositor to restore the toplevel\n      surface state, such as window position, window state, upon creation.\n      This is not double buffered and must be set before sending first commit.","summary":"set session id and restore id"},"args":[{"type":"arg","name":"restore_session_id","argType":"int","summary":"unique browser session id"},{"type":"arg","name":"restore_window_id","argType":"int","summary":"restore browser window id"}]},{"type":"request","name":"set_system_modal","since":"31","description":{"type":"description","text":"Requests that the toplevel surface should become a system modal. The\n        compositor will prevent other windows from receiving events. If there\n        are multiple system modal surfaces, the compositor will decide which\n        one to receive events.","summary":"make window a system modal"},"args":[]},{"type":"request","name":"unset_system_modal","since":"31","description":{"type":"description","text":"Requests that the system modal state of the toplevel surface will be\n        unset. The compositor will then allow other windows to recieve events.","summary":"unset window system modal state"},"args":[]},{"type":"request","name":"set_restore_info_with_window_id_source","since":"32","description":{"type":"description","text":"Request session id and restore id of the window. Set the information used by compositor to restore the toplevel surface state, such as window position, window state, upon creation. This is not double buffered and must be set before sending first commit. This is different from set_restore_info, used for clients that create multiple windows associated with restore_id_source.","summary":"set session id and restore window id source"},"args":[{"type":"arg","name":"restore_session_id","argType":"int","summary":"unique browser session id"},{"type":"arg","name":"restore_window_id_source","argType":"string","summary":"restore window id source"}]},{"type":"request","name":"set_decoration","since":"35","description":{"type":"description","text":"Clients are allowed to request a particular decoration for a\n        zaura_toplevel. The server is not required to honor this request. See\n        decoration_type for available options. Available since M105.","summary":"request a decoration for surface"},"args":[{"type":"arg","name":"type","argType":"uint","summary":"the new frame type"}]},{"type":"request","name":"release","requestType":"destructor","since":"38","description":{"type":"description","text":"Destroy this zaura_toplevel object. A client should call destroy when the role\n  is unmapped from a wl_surface.\n\n  See zaura_shell.release for destructor naming.","summary":"destroy zaura_toplevel"},"args":[]},{"type":"request","name":"set_float","since":"39","description":{"type":"description","text":"This is a request to place the surface above others.","summary":"float the surface on top"},"args":[]},{"type":"request","name":"unset_float","since":"39","description":{"type":"description","text":"Request that the surface resets floating.","summary":"unset the surface float"},"args":[]},{"type":"request","name":"set_z_order","since":"40","description":{"type":"description","text":"Sets the z order for a toplevel surface. See z_order_level for available options.","summary":"set z order for window"},"args":[{"type":"arg","name":"z_order","argType":"uint","summary":"z order value for the window"}]},{"type":"request","name":"set_origin","since":"41","description":{"type":"description","text":"Request a new location for the surface in device-independent pixels\n         (DPs), relative to the top-left corner of the given output.\n\n         A null output means whichever output currently contains the surface.\n\n         These parameters are just a request and the compositor may ignore\n         them, adjust them due to rules imposed by the window manager, or\n         preserve them for future operations. For example, the compositor will\n         not allow a position outside of the output; or the compositor may just\n         store it if the toplevel surface is in maximized state, and may use it\n         upon unmaximize.","summary":"set window position in DPs"},"args":[{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"},{"type":"arg","name":"output","argType":"object","summary":"output to contain the surface","interface":"wl_output","allowNull":"true"}]},{"type":"request","name":"activate","since":"42","description":{"type":"description","text":"Activates this window. This is equivalent to bringing the window to the\n        foreground. The compositor is free to ignore this request if it deems\n        the client to be misbehaving.","summary":"activates the window"},"args":[]},{"type":"request","name":"deactivate","since":"42","description":{"type":"description","text":"Deactivates this window. This is equivalent to requesting that the\n        window not be the foreground window. The exact behavior is\n        compositor-defined. The compositor is free to ignore this request\n        if it deems the client to be misbehaving.","summary":"deactivates the window"},"args":[]},{"type":"request","name":"set_fullscreen_mode","since":"44","description":{"type":"description","text":"Suggests how the windowing manager should behave if this surface were\n        to go fullscreen. Does not make the surface fullscreen.","summary":"Sets the behavior of the surface in fullscreen."},"args":[{"type":"arg","name":"mode","argType":"uint","enum":"fullscreen_mode"}]},{"type":"request","name":"set_scale_factor","since":"46","description":{"type":"description","text":"The client has a 32-bit float scale factor that is associated with each\n        zaura toplevel. This scale factor must be propagated exactly to exo. To\n        do so we reinterpret_cast into a 32-bit uint and later cast back into a\n        float. This is because wayland does not support native transport of\n        floats. As different CPU architectures may use different endian\n        representations for IEEE 754 floats, this protocol implicitly assumes\n        that the caller and receiver are the same machine. To avoid redundant\n        messages, this request needs to only be called once when the zaura\n        toplevel scale factor changes. This is double buffered state and will be\n        applied in the next commit.","summary":"Allows the client to set the scale factor for the future buffer commits."},"args":[{"type":"arg","name":"scale_factor_as_uint","argType":"uint"}]},{"type":"request","name":"set_snap_primary","since":"48","description":{"type":"description","text":"Request that surface is snapped to the left or top if primary layout,\n        right or bottom otherwise.","summary":"snap the surface to the primary snap position."},"args":[{"type":"arg","name":"snap_ratio_as_uint","argType":"uint"}]},{"type":"request","name":"set_snap_secondary","since":"48","description":{"type":"description","text":"Request that surface is snapped to the right or bottom if primary\n        layout, left or top otherwise.","summary":"snap the surface to the secondary snap position."},"args":[{"type":"arg","name":"snap_ratio_as_uint","argType":"uint"}]},{"type":"request","name":"intent_to_snap","since":"49","description":{"type":"description","text":"Notify (or inform) the server the client's intent to snap the window.\n        To inform it's no longer willing to snap, send 'none'.","summary":"client intents to snap the surface."},"args":[{"type":"arg","name":"direction","argType":"uint","enum":"snap_direction"}]},{"type":"request","name":"unset_snap","since":"49","description":{"type":"description","text":"Request that window unsets snapping.","summary":"Unset the window snap."},"args":[]},{"type":"request","name":"set_persistable","since":"52","description":{"type":"description","text":"Request the persistable status of a window.  Sets the persistable status\n      of the window in its window properties.  Should be called before first\n      commit.","summary":"Describes if the window is persistable"},"args":[{"type":"arg","name":"persistable","argType":"uint","summary":"is the argument persistable","enum":"persistable"}]},{"type":"request","name":"set_shape","since":"53","description":{"type":"description","text":"Sets the shape of the toplevel window in DP. Passing NULL will reset the\n        shape of the window.\n\n        This should be used only in support of the existing (deprecated) Chrome\n        Apps SetShape API and not for any other purpose.","summary":"set the shape of the surface in DP"},"args":[{"type":"arg","name":"region","argType":"object","interface":"wl_region","allowNull":"true"}]}],"events":[{"type":"event","name":"configure","since":"29","description":{"type":"description","text":"A configuration change that also includes the window origin in screen coordinates.","summary":"suggest a surface change"},"args":[{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"},{"type":"arg","name":"width","argType":"int"},{"type":"arg","name":"height","argType":"int"},{"type":"arg","name":"states","argType":"array"}]},{"type":"event","name":"origin_change","since":"29","description":{"type":"description","text":"A notification sent when the window origin has changed. Unlike a configure,\n        this does not imply the client needs to resize. The values are in screen\n        coordinates.","summary":"window origin change"},"args":[{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"}]},{"type":"event","name":"configure_raster_scale","since":"50","description":{"type":"description","text":"Sets the raster scale of this window. This should be called during a\n        configure event sequence. To do so we reinterpret_cast into a 32-bit\n        uint and later cast back into a float. This is because wayland does not\n        support native transport of floats. As different CPU architectures may\n        use different endian representations for IEEE 754 floats, this protocol\n        implicitly assumes that the caller and receiver are the same machine.","summary":"set the raster scale during a configure"},"args":[{"type":"arg","name":"scale","argType":"uint","summary":"Raster scale, in float format"}]}],"enums":[{"type":"enum","name":"orientation_lock","bitfield":false,"description":{"type":"description","text":"Defines orientation request when a surface is in fullscreen.","summary":"orientation lock request"},"entries":[{"type":"entry","name":"none","value":"1","summary":"no orientation lock"},{"type":"entry","name":"portrait","value":"2","summary":"primary or secondary portrait"},{"type":"entry","name":"landscape","value":"3","summary":"primary or secondary landscape"},{"type":"entry","name":"current","value":"4","summary":"keep current orientation"},{"type":"entry","name":"portrait_primary","value":"5","summary":"primary portrait"},{"type":"entry","name":"landscape_primary","value":"6","summary":"primary landscape"},{"type":"entry","name":"portrait_secondary","value":"7","summary":"secondary portrait"},{"type":"entry","name":"landscape_secondary","value":"8","summary":"secondary landscape"}]},{"type":"enum","name":"state","bitfield":false,"description":{"type":"description","text":"The states that are contained here are supplemental to the states\n        defined in the XDG shell and specific aura windows.","summary":"supplemental aura states to xdg states"},"entries":[{"type":"entry","name":"immersive","value":"100","since":"36","description":{"type":"description","text":"User can access system UIs such as the shelf and window frame\n          by pointing to, or swiping over, the screen edge.","summary":"immersive mode with hidden title bar and shelf"}},{"type":"entry","name":"minimized","value":"101","since":"36","description":{"type":"description","text":"The window has been minimized.","summary":"surface is minimized"}},{"type":"entry","name":"snapped_primary","value":"102","since":"38","description":{"type":"description","text":"The window is snapped to the left if the display is in landscape mode\n          and at the top in portrait mode.","summary":"window is snapped in primary position"}},{"type":"entry","name":"snapped_secondary","value":"103","since":"38","description":{"type":"description","text":"The window is snapped to the right if the display is in landscape mode\n          and at the bottom in portrait mode.","summary":"window is snapped in secondary position"}},{"type":"entry","name":"floated","value":"104","since":"38","description":{"type":"description","text":"The window is floated on top of other windows. One floated window is\n          allowed per desk. Floating a window when there is already a floated\n          window on the same desk will unfloat the floated window.","summary":"window is floated on top"}}]},{"type":"enum","name":"decoration_type","bitfield":false,"description":{"type":"description","text":"Decoration types are used to modify the surface (e.g. drop shadow).","summary":"different decoration types"},"entries":[{"type":"entry","name":"none","value":"0","summary":"no frame"},{"type":"entry","name":"normal","value":"1","summary":"caption with shadow"},{"type":"entry","name":"shadow","value":"2","summary":"shadow only"}]},{"type":"enum","name":"z_order_level","bitfield":false,"description":{"type":"description","text":"Different z order levels that are used to set the z order for a toplevel surface.","summary":"z order levels for windows"},"entries":[{"type":"entry","name":"normal","value":"0","summary":"the default level for windows"},{"type":"entry","name":"floating_window","value":"1","summary":"a floating window z-ordered above other normal windows"},{"type":"entry","name":"floating_ui_element","value":"2","summary":"used to show non-window style UIs that are shown above floating windows"},{"type":"entry","name":"security_surface","value":"3","summary":"cannot be interfered with or covered up"}]},{"type":"enum","name":"fullscreen_mode","bitfield":false,"description":{"type":"description","text":"Possible windowing system behaviors if this surface were to go\n          fullscreen.","summary":"Specifies the behavior of the surface in fullscreen."},"entries":[{"type":"entry","name":"plain","value":"0","summary":"user cannot access system UIs using mouse/touches"},{"type":"entry","name":"immersive","value":"1","summary":"user can access system UIs such as the shelf and window frame\n          by pointing to, or swiping over, the screen edge"}]},{"type":"enum","name":"snap_direction","bitfield":false,"description":{"type":"description","text":"Window snap directions.","summary":"window snap directions"},"entries":[{"type":"entry","name":"none","value":"0","summary":"unsnap the window"},{"type":"entry","name":"primary","value":"1","summary":"snap the window to the left or\n        top in primary layout, right or bottom in secondary layout"},{"type":"entry","name":"secondary","value":"2","summary":"snap the window to the right\n        or bottom in primary layout, top or left in secondary layout"}]},{"type":"enum","name":"persistable","bitfield":false,"description":{"type":"description","text":"Binary enum maps to boolean, describes whether or not a value is\n        persistable.","summary":"Describes whether or not the value is persistable"},"entries":[{"type":"entry","name":"not_persistable","value":"0","summary":"the value is not persistable"},{"type":"entry","name":"persistable","value":"1","summary":"the value is persistable"}]}]},{"type":"interface","name":"zaura_popup","version":"46","description":{"type":"description","text":"An interface to the popup shell, which allows the\n      client to access shell specific functionality.","summary":"aura shell interface to the popup shell"},"requests":[{"type":"request","name":"surface_submission_in_pixel_coordinates","since":"28","description":{"type":"description","text":"Informs the server that when submitting this surface, this client will not\n        use wl_surface_set_buffer_scale to report the scales, nor will it apply\n        scale via vp_viewporter. Instead the server should apply an appropriate\n        scale transform for the submitted buffers to be composited correctly.","summary":"surface will be submitted in pixel coordinates"},"args":[]},{"type":"request","name":"set_decoration","since":"35","description":{"type":"description","text":"Clients are allowed to request a particular decoration for a\n        zaura_toplevel. The server is not required to honor this request. See\n        decoration_type for available options. Available since M105.","summary":"request a decoration for surface"},"args":[{"type":"arg","name":"type","argType":"uint","summary":"the new frame type"}]},{"type":"request","name":"set_menu","since":"37","description":{"type":"description","text":"Set popup type to menu","summary":"set popup type to menu"},"args":[]},{"type":"request","name":"release","requestType":"destructor","since":"38","description":{"type":"description","text":"This request destroys the zaura_popup. A client should call destroy when the\n  role is unmapped from a wl_surface.\n\n  See zaura_shell.release for destructor naming.","summary":"destroy zaura_popup"},"args":[]},{"type":"request","name":"set_scale_factor","since":"46","description":{"type":"description","text":"The client has a 32-bit float scale factor that is associated with each\n        zaura popup. This scale factor must be propagated exactly to exo. To\n        do so we reinterpret_cast into a 32-bit uint and later cast back into a\n        float. This is because wayland does not support native transport of\n        floats. As different CPU architectures may use different endian\n        representations for IEEE 754 floats, this protocol implicitly assumes\n        that the caller and receiver are the same machine. To avoid redundant\n        messages, this request needs to only be called once when the zaura\n        popup's scale factor changes.","summary":"Allows the client to set the scale factor for the future buffer commits."},"args":[{"type":"arg","name":"scale_factor_as_uint","argType":"uint"}]}],"events":[],"enums":[{"type":"enum","name":"decoration_type","bitfield":false,"description":{"type":"description","text":"Decoration types are used to modify the surface (e.g. drop shadow).","summary":"different decoration types"},"entries":[{"type":"entry","name":"none","value":"0","summary":"no frame"},{"type":"entry","name":"normal","value":"1","summary":"caption with shadow"},{"type":"entry","name":"shadow","value":"2","summary":"shadow only"}]}]},{"type":"interface","name":"zaura_output_manager","version":"3","description":{"type":"description","text":"A global responsible for ensuring clients have a complete view of a given\n      output's state immediately following the bind of wl_output, and\n      subsequently as needed.\n\n      Clients can expect that all the manager's events for a given wl_output\n      arrive before the associated wl_output.done event. Clients must bind to\n      the manager global before any output globals.","summary":"aura shell interface to the output manager"},"requests":[],"events":[{"type":"event","name":"done","since":"1","description":{"type":"description","text":"This event is sent after all relevant properties of a\n        zaura_output_manager for a given wl_output have been sent.","summary":"sent all information about output"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"}]},{"type":"event","name":"display_id","since":"1","description":{"type":"description","text":"This event describes the 64bit display id assigned to each display by\n        ChromeOS. The value is opaque and should not be interpreted.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"advertise the output's display id"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"display_id_hi","argType":"uint"},{"type":"arg","name":"display_id_lo","argType":"uint"}]},{"type":"event","name":"logical_position","since":"1","description":{"type":"description","text":"The position event describes the location of the wl_output within the\n        global compositor space.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"position of the output within the global compositor space"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"x","argType":"int","summary":"x position within the global compositor space"},{"type":"arg","name":"y","argType":"int","summary":"y position within the global compositor space"}]},{"type":"event","name":"logical_size","since":"1","description":{"type":"description","text":"The logical_size event describes the logical size of the output in the\n        global compositor space.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"size of the output in the global compositor space"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"width","argType":"int","summary":"width in global compositor space"},{"type":"arg","name":"height","argType":"int","summary":"height in global compositor space"}]},{"type":"event","name":"physical_size","since":"1","description":{"type":"description","text":"The physical resolution of the display in pixels. The value should not\n        include any overscan insets or display rotation, except for any panel\n        orientation adjustment.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"size of the output in pixels"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"width","argType":"int","summary":"width in global compositor space"},{"type":"arg","name":"height","argType":"int","summary":"height in global compositor space"}]},{"type":"event","name":"insets","since":"1","description":{"type":"description","text":"This event describes the insets for the output in logical screen\n        coordinates, from which the work area can be calculated.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"advertise the work area insets for the output"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"top","argType":"int"},{"type":"arg","name":"left","argType":"int"},{"type":"arg","name":"bottom","argType":"int"},{"type":"arg","name":"right","argType":"int"}]},{"type":"event","name":"device_scale_factor","since":"1","description":{"type":"description","text":"The scale factor of the output device. We reinterpret_cast the float\n        scale factor into a 32-bit uint and later cast back into a float. This\n        is because wayland does not support native transport of floats. As\n        different CPU architectures may use different endian representations for\n        IEEE 754 floats, this protocol implicitly assumes that the caller and\n        receiver are the same machine.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"advertise device scale factor for the output"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"device_scale_factor","argType":"uint","summary":"display scale factor, in float format"}]},{"type":"event","name":"logical_transform","since":"1","description":{"type":"description","text":"This event describes the logical transform for the output. Whereas\n        panel transform corresponds to the display's panel rotation, the logical\n        transform corresponds to the display's logical rotation.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"logical transform of the output"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"transform","argType":"int","summary":"transform that maps framebuffer to output","enum":"wl_output.transform"}]},{"type":"event","name":"panel_transform","since":"1","description":{"type":"description","text":"This event describes the panel transform for the output, which is the\n        associated display's panel rotation.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"panel transform of the output"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"transform","argType":"int","summary":"transform that maps framebuffer to output","enum":"wl_output.transform"}]},{"type":"event","name":"name","since":"1","description":{"type":"description","text":"The name is a UTF-8 string with no convention defined for its contents.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"human-readable name of this output"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"name","argType":"string","summary":"output name"}]},{"type":"event","name":"description","since":"1","description":{"type":"description","text":"The description is a UTF-8 string with no convention defined for its\n        contents.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"human-readable description of this output"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"description","argType":"string","summary":"output description"}]},{"type":"event","name":"activated","since":"2","description":{"type":"description","text":"Notifies that this output is now active output. It is typically used as\n        a target when a new window is created without specific bounds.","summary":"target display for new windows"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"}]},{"type":"event","name":"overscan_insets","since":"3","description":{"type":"description","text":"This event describes the overscan insets for the output in physical\n        pixels.\n\n        The event is sent when binding to the output object and subsequently as\n        output state changes.","summary":"advertise the overscan insets for the output"},"args":[{"type":"arg","name":"output","argType":"object","interface":"wl_output"},{"type":"arg","name":"top","argType":"int"},{"type":"arg","name":"left","argType":"int"},{"type":"arg","name":"bottom","argType":"int"},{"type":"arg","name":"right","argType":"int"}]}],"enums":[]}]}